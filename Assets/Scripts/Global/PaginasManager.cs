//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
/// <summary>
/// Clase que gestiona el estado de las Paginas. 
/// Esta clase se encarga de reportar si una pagina se puede cargar o no
/// </summary>
using UnityEngine;


public class PaginasManager
{
	public const int CANT_PAGINAS = 5;
	private static bool [] paginasActivadas;

	#region Singleton

	private static PaginasManager instancia;
	public static PaginasManager Singleton
	{
		get
		{
			if(instancia == null)
				instancia = new PaginasManager();
			return instancia;
		}

	}
	#endregion
	private PaginasManager ()
	{
		//todos los niveles inician desactivados (false) por defecto
		paginasActivadas = new bool[CANT_PAGINAS];
		//El primer nivel esta activado por defecto
		paginasActivadas[0] = true;
		//Activamos la 1 tambien por si se quiere pasar el tutorial sin tener que jugarlo
		paginasActivadas[1] = true;
	}

	public  void Activar(int pagina)
	{
		try
		{
			paginasActivadas[pagina] = true;
		}catch(ArgumentOutOfRangeException)
		{
			Debug.Log("La pagina dado no existe para activar");
		}
	}

	public bool EstaActivada(int pagina)
	{
		try
		{
			return paginasActivadas[pagina];
		}catch(ArgumentOutOfRangeException)
		{
			Debug.Log("La Pagina dada no existe para activar");

		}
		return false;
	}

	public void ActivarSiguiente(string paginaName)
	{
		// Se obtiene el numero de la pagina a partir de su nombre
		int numPagina = GetNumPagina(paginaName);
		//Solo si la pagina siguiente esta dentro del numero de paginas existentes...
		if(numPagina++ < paginasActivadas.Length)
		{
			//Se activa la pagina
			Activar(numPagina);
		}
		//Sino no hace nada...
		


	}

	public int GetNumPagina(string paginaName)
	{
		int numPagina;
		if(int.TryParse(paginaName[paginaName.Length - 1].ToString(), out numPagina))
		{
			return numPagina;
		}
		else
		{
			throw new ArgumentException("El nombre de Pagina dada no tiene numero");
		}
	}
}


